import de.undercouch.gradle.tasks.download.Download

//noinspection GradleCompatible
//noinspection GradleCompatible
buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }


    dependencies {
        //noinspection GradleDynamicVersion
        classpath 'io.fabric.tools:gradle:1.+'
    }


}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'



apply plugin: 'de.undercouch.download'

task downloadDebugGoogleJson(type: Download) {
    src 'https://firebasestorage.googleapis.com/v0/b/speko-debug.appspot.com/o/setup_files%2Fgoogle-services.json?alt=media&token=80312842-d672-4d49-a800-254c86614ab7'
    dest file("$projectDir/src/debug/google-services.json")
    doLast {
        cleanBuildCache
    }
}

task downloadReleaseGoogleJson(type: Download) {
    src 'https://firebasestorage.googleapis.com/v0/b/firebase-speko.appspot.com/o/setup_files%2Fgoogle-services.json?alt=media&token=99d46238-2dbf-43b1-b27d-6bad7b5bd0dc'
    dest file("$projectDir/src/release/google-services.json")
}

task downloadReleaseSignProperties(type: Download) {
    src 'https://firebasestorage.googleapis.com/v0/b/firebase-speko.appspot.com/o/setup_files%2Fsign.properties?alt=media&token=aec77f08-897d-44d1-ab26-03e5b812b832'
    dest file("$projectDir/keys/sign.properties")
}

task downloadReleaseKey(type: Download) {
    dependsOn downloadReleaseSignProperties

    src 'https://firebasestorage.googleapis.com/v0/b/firebase-speko.appspot.com/o/setup_files%2Frelease.jks?alt=media&token=227dc517-e853-493f-b1bb-9e5ee560dccd'
    dest file("$projectDir/keys/release.jks")

}

preBuild.dependsOn downloadReleaseSignProperties
preBuild.dependsOn downloadReleaseGoogleJson
preBuild.dependsOn downloadReleaseKey
preBuild.dependsOn downloadDebugGoogleJson
afterEvaluate{
    tasks.getByPath(":app:processDebugGoogleServices").dependsOn downloadDebugGoogleJson

}

repositories {
    maven { url 'https://maven.fabric.io/public' }
    google()
}



android {
    signingConfigs {
        def Properties signProps = new Properties()
        def propFile = new File("$projectDir/keys/sign.properties")


       


        release {
            if (propFile.exists()){
                signProps.load(new InputStreamReader(new FileInputStream(propFile), "UTF-8"))
            }
            keyAlias 'release'
            keyPassword signProps['KEY_PASSWORD_RELEASE']
            storeFile file("$projectDir/keys/release.jks")
            storePassword signProps['STORE_PASSWORD_RELEASE']
        }

    }
    compileSdkVersion rootProject.compileSdkVersionExt
    buildToolsVersion rootProject.buildToolsVersionExt
    defaultConfig {
        applicationId "com.speko.android"
        minSdkVersion rootProject.minSdkVersionExt
        targetSdkVersion rootProject.targetSdkVersionExt
        versionCode 9
        versionName "0.1.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue('string', 'app_name', 'Speko')
            signingConfig signingConfigs.release
        }
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            minifyEnabled false
            useProguard false
            resValue('string', 'app_name', 'Speko-D')
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })




    //firebase + crashlytics related things
    compile "com.firebaseui:firebase-ui-auth:$rootProject.firebaseUiExt"
    compile "com.google.firebase:firebase-database:$rootProject.firebaseExt"
    compile "com.google.firebase:firebase-storage:$rootProject.firebaseExt"
    compile "com.facebook.android:facebook-android-sdk:$rootProject.facebookAndroidExt"
    compile "com.google.firebase:firebase-core:$rootProject.firebaseExt"
    compile("com.crashlytics.sdk.android:crashlytics:$rootProject.crashlytics") {
        transitive = true
    }

    //retrofit + gson
    compile "com.squareup.retrofit2:converter-gson:$rootProject.retrofitExt"
    compile "com.squareup.retrofit2:retrofit:$rootProject.retrofitExt"
    compile "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttp3Ext"
    compile "com.android.support:gridlayout-v7:$rootProject.androidSupportLibrariesExt"

    // percent layout
    compile "com.android.support:percent:$rootProject.androidSupportLibrariesExt"


    testCompile 'junit:junit:4.12'

    //butterknife
    compile 'com.jakewharton:butterknife:8.4.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'

    //schematic
    compile 'net.simonvt.schematic:schematic:0.6.7'
    annotationProcessor 'net.simonvt.schematic:schematic-compiler:0.6.7'

//    compile "com.android.support:appcompat-v7:$rootProject.androidSupportLibrariesExt"

    // picasso
    compile 'com.squareup.picasso:picasso:2.5.2'

    //round image view
    compile 'de.hdodenhof:circleimageview:2.1.0'

    // Gradle dependency on Shimmer for Android
    compile 'com.facebook.shimmer:shimmer:0.1.0@aar'


    compile project(':chatmessageview')

}








apply plugin: 'com.google.gms.google-services'






